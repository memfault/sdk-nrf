.. _etb_trace:

ETB trace
#########

.. contents::
   :local:
   :depth: 2

The experimental Embedded Trace Buffer (ETB) library enables the tracing of executed instructions and storing them in a dedicated RAM buffer.
Traces are generated by the core's Embedded Trace Macrocell (ETM) unit and are captured without CPU intervention.
Currently, the nRF91 series SoCs are supported.

The ETB RAM buffer behaves as a circular buffer of 2 KB, where new traces overwrite older traces once it is full.
The application reads the captured traces using the library's APIs.
You can refer to `ARM CoreSight`_ documentation for more information about the various CoreSight components, trace format, and trace processing.

The ETB trace library is used in the :ref:`memfault_sample` sample, where it is shown how to read out the ETB buffer and store the data in a coredump in case of a system crash.

Configuration
*************

To enable the library, use the :kconfig:option:`CONFIG_ETB_TRACE` Kconfig option.
By default, the library automatically starts tracing at the earliest stage in the Zephyr boot sequence to capture instructions as early as possible.
You can choose to start tracing in the application by disabling the :kconfig:option:`CONFIG_ETB_TRACE_SYS_INIT` Kconfig option.

To capture ETM-generated traces and store them in ETB, the SoC's trace and debug system must be enabled.
This increases power consumption significantly.
The library provides the option (:kconfig:option:`CONFIG_ETB_TRACE_PM`) to reduce the power consumption by disabling the debug system when the CPU goes to idle.
This is a feature that requires code to be executed both on entry and exit of the CPU idle state and will introduce latency to the system.
It might also have other, unknown side effects on the system.

Usage
*****

To initialize and start tracing, call the :c:func:`etb_trace_start` function.
The function performs the following:

#. Configures the ETM.
#. Sets up the ATB funnels and replicator.
#. Enables the ETB.

Traces are now written continuously to the ETB RAM.

To stop trace capture, use the :c:func:`etb_trace_stop` function.

The captured traces can now be read out using the :c:func:`etb_data_get` function.
The maximum size of data the ETB buffer can hold is 2 KB.


API documentation
*****************

| Header file: :file:`include/debug/etb_trace.h`
| Source files: :file:`subsys/debug/etb_trace/`

.. doxygengroup:: etb_trace
   :project: nrf
   :members:
